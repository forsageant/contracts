/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Nodes, NodesInterface } from "../../contracts/Nodes";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "power",
        type: "uint256",
      },
    ],
    name: "NoderPowerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "TakedReward",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DELEGATE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MANAGER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "card",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distrubutionReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cardAddr",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "card_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minerInfoOf",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "taked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "power",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cardAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "power",
        type: "uint256",
      },
    ],
    name: "setNoderPowerDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cardAddr",
        type: "address",
      },
    ],
    name: "takeReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a01806100206000396000f3fe608060405234801561001057600080fd5b50600436106101355760003560e01c806391d14854116100b2578063c0ba241b11610081578063db3ad22c11610066578063db3ad22c1461033c578063ec87621c14610345578063f7c618c11461036c57600080fd5b8063c0ba241b14610302578063d547741f1461032957600080fd5b806391d148541461025c5780639ec8f8aa146102a2578063a217fddf146102e7578063b9d2d735146102ef57600080fd5b80632f2ff15d116101095780634267087a116100ee5780634267087a146101e1578063485cc955146101f45780634e4a14321461020757600080fd5b80632f2ff15d146101bb57806336568abe146101ce57600080fd5b80628cc2621461013a57806301ffc9a714610160578063248a9ca3146101835780632ad2e08c146101a6575b600080fd5b61014d610148366004611630565b61038c565b6040519081526020015b60405180910390f35b61017361016e36600461164b565b610405565b6040519015158152602001610157565b61014d61019136600461168d565b60009081526065602052604090206001015490565b6101b96101b4366004611630565b61049e565b005b6101b96101c93660046116a6565b61055e565b6101b96101dc3660046116a6565b610588565b6101b96101ef3660046116d2565b610640565b6101b96102023660046116fc565b610736565b61023c610215366004611630565b60986020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610157565b61017361026a3660046116a6565b600091825260656020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b6097546102c29073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610157565b61014d600081565b6101b96102fd36600461168d565b61082f565b61014d7f59eafab5ad7c55c947e14067db3cd76cda28a71cbc05441818210132c6871ab981565b6101b96103373660046116a6565b6108f2565b61014d609a5481565b61014d7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b609b546102c29073ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff81166000908152609860205260408120609a546103c15750600092915050565b64e8d4a5100081600301546099546103d99190611755565b82600201546103e8919061176c565b6103f291906117a9565b81546103fe91906117e4565b9392505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061049857507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152609860205260408120906104cd8361038c565b9050801561051f57600080835560995460038401556001830180548392906104f69084906117e4565b9091555050609b5461051f9073ffffffffffffffffffffffffffffffffffffffff163383610917565b6040805182815242602082015233917fcc0e3403cad9784b3aa15d358d1f5bb972830791dcc488f45d711028f95138f2910160405180910390a2505050565b600082815260656020526040902060010154610579816109eb565b61058383836109f8565b505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610632576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b61063c8282610aec565b5050565b7f59eafab5ad7c55c947e14067db3cd76cda28a71cbc05441818210132c6871ab961066a816109eb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526098602052604090206106988461038c565b815560995460038201556002810154609a5484916106b591611755565b6106bf91906117e4565b609a55600280820184905573ffffffffffffffffffffffffffffffffffffffff85166000818152609860205260409081902090920185905590517f91ce28a0e13ced8ec3cb24f174c90367f36bf3accd0454edbd445b88f7d205e6906107289086815260200190565b60405180910390a250505050565b60006107426001610ba7565b9050801561077757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61077f610d32565b61078882610e08565b609b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516179055801561058357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b609a54610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f546f74616c506f77657249735a65726f000000000000000000000000000000006044820152606401610629565b609b546108bd9073ffffffffffffffffffffffffffffffffffffffff16333084610ee6565b609a546108cf8264e8d4a5100061176c565b6108d991906117a9565b609960008282546108ea91906117e4565b909155505050565b60008281526065602052604090206001015461090d816109eb565b6105838383610aec565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526105839084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610f4a565b6109f58133611056565b50565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1661063c57600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610a8e3390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff161561063c57600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008054610100900460ff1615610c5e578160ff166001148015610bca5750303b155b610c56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610629565b506000919050565b60005460ff808416911610610cf5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610629565b50600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055600190565b919050565b600054610100900460ff16610dc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610629565b610dd1611128565b610ddc6000336111bf565b610e067f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08336111bf565b565b600054610100900460ff16610e9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610629565b609780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610f449085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401610969565b50505050565b6000610fac826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166111c99092919063ffffffff16565b8051909150156105835780806020019051810190610fca91906117fc565b610583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610629565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1661063c576110ae8173ffffffffffffffffffffffffffffffffffffffff1660146111e0565b6110b98360206111e0565b6040516020016110ca92919061184a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a0000000000000000000000000000000000000000000000000000000008252610629916004016118cb565b600054610100900460ff16610e06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610629565b61063c82826109f8565b60606111d88484600085611423565b949350505050565b606060006111ef83600261176c565b6111fa9060026117e4565b67ffffffffffffffff8111156112125761121261191c565b6040519080825280601f01601f19166020018201604052801561123c576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106112735761127361194b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106112d6576112d661194b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600061131284600261176c565b61131d9060016117e4565b90505b60018111156113ba577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061135e5761135e61194b565b1a60f81b8282815181106113745761137461194b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936113b38161197a565b9050611320565b5083156103fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610629565b6060824710156114b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610629565b73ffffffffffffffffffffffffffffffffffffffff85163b611533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610629565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161155c91906119af565b60006040518083038185875af1925050503d8060008114611599576040519150601f19603f3d011682016040523d82523d6000602084013e61159e565b606091505b50915091506115ae8282866115b9565b979650505050505050565b606083156115c85750816103fe565b8251156115d85782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062991906118cb565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d2d57600080fd5b60006020828403121561164257600080fd5b6103fe8261160c565b60006020828403121561165d57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146103fe57600080fd5b60006020828403121561169f57600080fd5b5035919050565b600080604083850312156116b957600080fd5b823591506116c96020840161160c565b90509250929050565b600080604083850312156116e557600080fd5b6116ee8361160c565b946020939093013593505050565b6000806040838503121561170f57600080fd5b6117188361160c565b91506116c96020840161160c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561176757611767611726565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117a4576117a4611726565b500290565b6000826117df577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082198211156117f7576117f7611726565b500190565b60006020828403121561180e57600080fd5b815180151581146103fe57600080fd5b60005b83811015611839578181015183820152602001611821565b83811115610f445750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161188281601785016020880161181e565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516118bf81602884016020880161181e565b01602801949350505050565b60208152600082518060208401526118ea81604085016020870161181e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008161198957611989611726565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b600082516119c181846020870161181e565b919091019291505056fea26469706673582212201e9af0a26ef5ac8b4cd2578d3e4259cd10e419fdb55297934793f0ade1d9b98864736f6c634300080a0033";

type NodesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NodesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Nodes__factory extends ContractFactory {
  constructor(...args: NodesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Nodes> {
    return super.deploy(overrides || {}) as Promise<Nodes>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Nodes {
    return super.attach(address) as Nodes;
  }
  override connect(signer: Signer): Nodes__factory {
    return super.connect(signer) as Nodes__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NodesInterface {
    return new utils.Interface(_abi) as NodesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Nodes {
    return new Contract(address, _abi, signerOrProvider) as Nodes;
  }
}
